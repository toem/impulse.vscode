{
	"name": "impulse",
	"displayName": "impulse",
	"description": "impulse is a visualization and analysis workbench which helps engineers to comfortably understand and debug complex semiconductor and multi-core software systems.",
	"publisher": "toem-de",
	"homepage": "https://www.toem.io",
	"author": {
		"name": "Thomas Haber"
	},
	"license": "See LICENSE.md",
	"version": "0.9.34",
	"engines": {
		"vscode": "^1.95.0"
	},
	"icon": "images/lg_impulse.png",
	"categories": [
		"Visualization",
		"Data Science",
		"Other"
	],
	"keywords": [
		"impulse",
		"visualization",
		"analysis",
		"workbench",
		"vcd",
		"trace",
		"logging",
		"rt",
		"eda"
	],
	"galleryBanner": {
		"color": "#F2F2F2",
		"theme": "light"
	},
	"private": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/toem/impulse.vscode.git"
	},
	"bugs": {
		"url": "https://github.com/toem/impulse.vscode/issues"
	},
	"extensionKind": [
		"workspace"
	],
	"activationEvents": [
		"onFileSystem:impulseFs"
	],
	"main": "./out/extension.js",
	"contributes": {
		"customEditors": [
			{
				"viewType": "de.toem.impulse.editor.viewer",
				"displayName": "Signal Viewer",
				"selector": [
					{
						"filenamePattern": "*"
					},
					{
						"filenamePattern": "*.rec??"
					}
				],
				"priority": "option"
			},
			{
				"viewType": "de.toem.impulse.editor.wallet",
				"displayName": "Wallet Editor",
				"selector": [
					{
						"filenamePattern": "*.wal??"
					}
				],
				"priority": "option"
			},
			{
				"viewType": "de.toem.impulse.editor.preferences",
				"displayName": "impulse Preferences",
				"selector": [
					{
						"filenamePattern": "dummy"
					}
				],
				"priority": "default"
			}
		],
		"viewsContainers": {
			"panel": [
				{
					"id": "samples-container",
					"title": "Samples",
					"icon": "$(clear-all)"
				}
			]
		},
		"views": {
			"samples-container": [
				{
					"type": "webview",
					"id": "de.toem.impulse.parts.samples-1",
					"name": "Sample Table 1",
					"icon": "$(list-unordered)"
				},
				{
					"type": "webview",
					"id": "de.toem.impulse.parts.samples-2",
					"name": "Sample Table 2",
					"visibility": "hidden",
					"icon": "$(list-unordered)"
				},
				{
					"type": "webview",
					"id": "de.toem.impulse.parts.samples-3",
					"name": "Sample Table 3",
					"visibility": "hidden",
					"icon": "$(list-unordered)"
				},
				{
					"type": "webview",
					"id": "de.toem.impulse.parts.samples-4",
					"name": "Sample Table 4",
					"visibility": "hidden",
					"icon": "$(list-unordered)"
				},
				{
					"type": "webview",
					"id": "de.toem.impulse.parts.sample",
					"name": "Sample Inspector",
					"icon": "$(list-tree)"
				}
			]
		},
		"languageModelTools": [
			{
				"name": "impulse_fetchSampleTable",
				"tags": [
					"samples",
					"signal",
					"impulse"
				],
				"toolReferenceName": "samples",
				"displayName": "Sample Tables",
				"modelDescription": "Reads information and sample data of a sample table. Returns information about the envolved signals, no of samples, selection and columns and returns the requested samples. ",
				"userDescription": "Reads information and sample data of a sample table",
				"canBeReferencedInPrompt": true,
				"icon": "$(list-unordered)",
				"inputSchema": {
					"type": "object",
					"properties": {
						"pindex": {
							"type": "number",
							"description": "Index of a sample table , typically 1..4",
							"default": 1
						},
						"range": {
							"type": "string",
							"description": "The range of samples to be read, e.g. '0-50'. If not given, a max number of  samples are fetched. The range is inclusive, i.e. the first and last sample are included in the result."
						}
					}
				}
			},
			{
				"name": "impulse_getHelp",
				"tags": [
					"manual",
					"api",
					"impulse"
				],
				"toolReferenceName": "impulse",
				"displayName": "impulse Manual & API",
				"modelDescription": "earch impulse documentation using natural language. Returns relevant content as markdown for manual pages or Java code for API references. For API questions, include class/method names in your query (e.g., RecordSet, SignalProcessor). For conceptual searches, use specific terminology from the impulse domain (signal visualization, trace analysis, etc.). The tool analyzes your query to find the most relevant documentation sections.",
				"userDescription": "Read impulse manual and API documentation",
				"canBeReferencedInPrompt": true,
				"icon": "$(list-unordered)",
				"inputSchema": {
					"type": "object",
					"properties": {
						"query": {
							"type": "string",
							"description": "The query to search the documentation for. Should contain all relevant context. Should ideally be text and keywords that might appear in the documentation."
						}
					},
					"required": [
						"query"
					]
				}
			},
			{
				"name": "impulse_getHelpContent",
				"tags": [
					"manual",
					"api",
					"impulse"
				],
				"toolReferenceName": "impulse",
				"displayName": "impulse Manual & API",
				"modelDescription": "Retrieve specific documentation content by document IDs. Use this after impulse_getHelp identifies relevant content. Returns full documentation text for the provided IDs. If no IDs are provided, returns a metadata index of all available documentation. Document IDs from impulse_getHelp can be passed directly to this tool to get complete documentation sections.",
				"userDescription": "Read impulse manual and API documentation",
				"canBeReferencedInPrompt": false,
				"icon": "$(list-unordered)",
				"inputSchema": {
					"type": "object",
					"properties": {
						"docIDs": {
							"type": "string",
							"description": "The docIDs of the requested help content, sperated by comma."
						}
					}
				}
			}
		],
		"commands": [
			{
				"command": "de.toem.impulse.commands.preferences",
				"title": "Open impulse Preferences Editor",
				"category": "impulse"
			},
			{
				"command": "de.toem.impulse.commands.expression",
				"title": "Executes an impulse expression file",
				"category": "impulse"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "de.toem.impulse.commands.expression",
					"title": "Run impulse Expression",
					"category": "impulse",
					"when": "explorerResourceIsFolder == false && resourceExtname == .jx"
				}
			]
		},
		"languages": [
			{
				"id": "jx",
				"extensions": [
					".recJx",
					".recJX",
					".jx"
				],
				"configuration": "./languages/jx.json"
			}
		],
		"grammars": [
			{
				"language": "jx",
				"scopeName": "source.jx",
				"path": "./languages/jx-grammar.json"
			}
		],
		"files.associations": {
			"*.recJs": "javascript"
		},
		"configuration": [
			{
				"title": "Server",
				"properties": {
					"impulse.java": {
						"order": 0,
						"type": "string",
						"default": "java -Xms128m -Xmx2048m",
						"description": "Command line to start the impulse java osgi backend. Changes only take effect after a restart. command:de.toem.impulse.commands.preferences "
					},
					"impulse.port": {
						"order": 1,
						"type": "string",
						"default": "0",
						"description": "Communication port for the impulse backend. Changes only take effect after a restart. Select 0 for random port."
					},
					"impulse.xdebugger": {
						"order": 2,
						"type": "boolean",
						"default": false,
						"description": "Enable java extension debugging."
					}
				}
			},
			{
				"title": "Preferences",
				"properties": {
					"impulse.preferences": {
						"order": 1,
						"type": "string",
						"default": "XML",
						"enum": [
							"XML"
						],
						"enumDescriptions": [
							"Stores preferences as XML file"
						],
						"markdownDescription": "You can edit the location (user, workspace, workspace folder) for the various impulse preferences using the settings below (e.g. you may keep the serializer preferences per user and the views per workspace).\n\nTo modify the preferences use the [impulse Preference editor](command:de.toem.impulse.commands.preferences).\n\nUse this setting to change the preferences format."
					},
					"impulse.preferenceLocation.serializers": {
						"order": 20,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the serializer preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.adaptors": {
						"order": 21,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the adaptor preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.producers": {
						"order": 22,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the producer preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.views": {
						"order": 30,
						"type": "string",
						"default": "Workspace",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the view preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.processors": {
						"order": 31,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the signal processor preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.diagrams": {
						"order": 32,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the diagram preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.search": {
						"order": 33,
						"type": "string",
						"default": "Workspace",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the search preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.formatters": {
						"order": 41,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the formatter preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.templates": {
						"order": 42,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the template preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.licenses": {
						"order": 50,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the license preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.colors": {
						"order": 43,
						"type": "string",
						"default": "User",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the color preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.parts": {
						"order": 44,
						"type": "string",
						"default": "Workspace",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the part preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					},
					"impulse.preferenceLocation.commands": {
						"order": 52,
						"type": "string",
						"default": "Workspace",
						"enum": [
							"User",
							"Workspace",
							"Workspace Folder"
						],
						"enumDescriptions": [
							"Stores preferences in user (global) storage -- all workspaces",
							"Stores preferences in workspace storage",
							"Stores preferences in a workspace folder (./impulse)"
						],
						"description": "Sets the location of the command preferences. You can choose between 'User', 'Workspace' and 'Workspace Folder'."
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint . --ext .ts,.tsx",
		"watch": "tsc -w -p ./"
	},
	"dependencies": {
		"ws": "^6.2.2"
	},
	"devDependencies": {
		"@types/vscode": "^1.95.0",
		"@vscode/vsce": "^3.3.0",
		"@types/ws": "^6.0.0",
		"@eslint/js": "^9.13.0",
		"@stylistic/eslint-plugin": "^2.9.0",
		"@types/node": "^20",
		"eslint": "^9.13.0",
		"typescript": "^5.8.2",
		"typescript-eslint": "^8.26.0"
	},
	"impulseBundles": []
}